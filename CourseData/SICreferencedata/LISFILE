0080        LOADER   START   80                ABSOLUTE LOADER FOR SIC        
            .                                                                 
            . THIS LOADER READS AN OBJECT PROGRAM FROM DEVICE F2 AND LOADS IT 
            . INTO MEMORY. THE HEADER RECORD FOR THE OBJECT PROGRAM IS NOT    
            . PROCESSED. WHEN THE END RECORD IS READ, THE LOADER JUMPS TO     
            . THE INDICATED STARTING ADDRESS.                                 
            .                                                                 
            . ERRORS IN THE OBJECT PROGRAM WILL RESULT IN AN ERROR HALT       
            . (ON AN ILLEGAL INSTRUCTION TRAP). THE ADDRESS OF THE TRAP       
            . (THE BYTES LABELLED HALT1 THROUGH HALT4) WILL INDICATE THE      
            . TYPE OF ERROR DETECTED.                                         
            .                                                                 
            .     REGISTER X = NEXT ADDRESS TO BE LOADED                      
            .                                                                 
0080 48010C          JSUB    READCHAR          READ FIRST CHARACTER           
0083 280162          COMP    HEADREC           CHECK FOR HEADER RECORD        
0086 30008A          JEQ     SKIPHEAD          CONTINUE IF HEADER IS PRESENT, 
0089 FF     HALT1    BYTE    X'FF'               OTHERWISE HALT (NO HEADER)   
008A 48014D SKIPHEAD JSUB    SKIPEOL           SKIP THE REST OF THE HEADER    
008D 48010C PROCLOOP JSUB    READCHAR          READ FIRST CHAR OF NEXT RECORD 
0090 280165          COMP    TEXTREC           CHECK FOR TEXT RECORD          
0093 30009D          JEQ     PROCTEXT                                         
0096 280168          COMP    ENDREC            CHECK FOR END RECORD           
0099 3000DC          JEQ     PROCEND                                          
009C FF     HALT2    BYTE    X'FF'             ERROR HALT (UNKNOWN REC TYPE)  
009D 4800E5 PROCTEXT JSUB    GETADDR           GET ADDRESS FROM TEXT RECORD   
00A0 00016B          LDA     ZERO                                             
00A3 48011B          JSUB    GETD              GET FIRST HEX DIGIT OF LENGTH  
00A6 20017D          MUL     K16               SHIFT LEFT 4 BITS              
00A9 0C018D          STA     TEMP              SAVE SHIFTED VALUE             
00AC 48011B          JSUB    GETD              GET SECOND HEX DIGIT OF LENGTH 
00AF 18018D          ADD     TEMP              COMBINE TO FORM LENGTH OF TEXT 
00B2 180187          ADD     ADDRESS           ADD STARTING ADDRESS OF TEXT   
00B5 0C018A          STA     LIMIT             SAVE RESULT AS LIMIT ADDRESS   
00B8 040187          LDX     ADDRESS           LOAD TEXT ADDRESS INTO REG X   
00BB 00016B TEXTLOOP LDA     ZERO                                             
00BE 48011B          JSUB    GETD              GET FIRST DIGIT OF OBJECT BYTE 
00C1 20017D          MUL     K16               SHIFT LEFT 4 BITS              
00C4 0C018D          STA     TEMP              SAVE SHIFTED VALUE             
00C7 48011B          JSUB    GETD              GET SECOND DIGIT OF OBJECT BYTE
00CA 18018D          ADD     TEMP              COMBINE TO FORM BYTE VALUE     
00CD 548000          STCH    0,X               STORE IN MEMORY                
00D0 2C018A          TIX     LIMIT             ADD 1 TO ADDRESS BEING LOADED  
00D3 3800BB          JLT     TEXTLOOP          LOOP UNTIL LIMIT REACHED       
00D6 48014D          JSUB    SKIPEOL           SKIP REMINDER OF RECORD AND EOL
00D9 3C008D          J       PROCLOOP          GO TO PROCESS NEXT RECORD      
00DC 4800E5 PROCEND  JSUB    GETADDR           GET ADDRESS FROM END RECORD    
00DF 040187          LDX     ADDRESS           LOAD INTO REGISTER X           
00E2 3C8000          J       0,X               JUMP TO STARTING ADDRESS       
            .                                                                 
            . THIS SUBROUTINE READS AN ADDRESS FROM AN OBJECT PROGRAM         
            . RECORD (6 HEX DIGITS) AND STORES IT IN INTEGER FORM IN THE      
            . VARIABLE NAMED ADDRESS.                                         
            .                                                                 
00E5 140190 GETADDR  STL     RETGA             SAVE RETURN ADDRESS            
00E8 04016B          LDX     ZERO              INITIALIZE ADDRESS TO ZERO     
00EB 100187          STX     ADDRESS                                          
00EE 48011B ADDRLOOP JSUB    GETD              GET HEX DIGIT OF ADDRESS       
00F1 0C018D          STA     TEMP                                             
00F4 000187          LDA     ADDRESS           SHIFT ADDRESS LEFT 4 BITS      
00F7 20017D          MUL     K16                                              
00FA 18018D          ADD     TEMP              ADD IN NEW HEX DIGIT VALUE     
00FD 0C0187          STA     ADDRESS                                          
0100 2C0171          TIX     K6                LOOP UNTIL ALL 6 DIGITS        
0103 3800EE          JLT     ADDRLOOP            HAVE BEEN PROCESSED          
0106 080190          LDL     RETGA             RETURN TO CALLER               
0109 4C0000          RSUB                                                     
            .                                                                 
            . THIS SUBROUTINE READS THE NEXT CHARACTER OF THE OBJECT PROGRAM  
            .                                                                 
010C 00016B READCHAR LDA     ZERO                                             
010F E00186 READLOOP TD      INPUT             TEST INPUT DEVICE              
0112 30010F          JEQ     READLOOP          LOOP UNTIL READY               
0115 D80186          RD      INPUT             READ CHARACTER                 
0118 4C0000          RSUB                      RETURN TO CALLER               
            .                                                                 
            . THIS SUBROUTINE READS ONE CHARACTER FROM THE INPUT AND COVERTS  
            . IT FROM ASCII CODE TO HEX DIGIT VALUE. THE CONVERTED HEX        
            . DIGIT VALUE IS RETURNED IN REGISTER A                           
            .                                                                 
011B 140193 GETD     STL     RETGD             SAVE RETURN ADDRESS            
011E 48010C GETDLOOP JSUB    READCHAR          READ CHARACTER                 
0121 280180          COMP    HEX04             IF END OF FILE,                
0124 30014B          JEQ     HALT3               GO TO ERROR HALT             
0127 280183          COMP    HEX30             COMPARE TO CHARACTER '0'       
012A 38011E          JLT     GETDLOOP          SKIP CHARACTERS LESS THAN '0'  
012D 1C0183          SUB     HEX30             SUBTRACT HEX 30 FROM ASCII CODE
0130 280177          COMP    K10               IF RESULT < 10, CONVERSION IS  
0133 380145          JLT     RETURN              COMPLETE. OTHERWISE, SUBTRACT
0136 1C0174          SUB     K7                  7 MORE (FOR 'A' THROUGH 'F') 
0139 280177          COMP    K10               CHECK FOR ILLEGAL HEX DIGITS   
013C 38014C          JLT     HALT4             GO TO ERROR HALT IF ILLEGAL    
013F 28017A          COMP    K15                                              
0142 34014C          JGT     HALT4                                            
0145 080193 RETURN   LDL     RETGD             RETURN TO CALLER               
0148 4C0000          RSUB                                                     
014B FF     HALT3    BYTE    X'FF'             ERROR HALT (PREMATURE EOF)     
014C FF     HALT4    BYTE    X'FF'             ERROR HALT (ILLEGAL HEX DIGIT) 
            .                                                                 
            . THIS SUBROUTINE SKIPS THE REST OF THE CURRENT OBJECT            
            . PROGRAM RECORD, INCLUDING THE END-OF-LINE MARKER                
            .                                                                 
014D 140196 SKIPEOL  STL     RETS              SAVE RETURN ADDRESS            
0150 48010C EOLLOOP  JSUB    READCHAR          READ CHARACTER                 
0153 28016B          COMP    ZERO              CHECK FOR END-OF-LINE          
0156 30015C          JEQ     EXIT              EXIT IF END-OF-LINE FOUND      
0159 3C0150          J       EOLLOOP           LOOP                           
015C 080196 EXIT     LDL     RETS              RETURN TO CALLER               
015F 4C0000          RSUB                                                     
0162 000048 HEADREC  BYTE    X'000048'         CHARACTER 'H'                  
0165 000054 TEXTREC  BYTE    X'000054'         CHARACTER 'T'                  
0168 000045 ENDREC   BYTE    X'000045'         CHARACTER 'E'                  
016B 000000 ZERO     WORD    0                                                
016E 000002 K2       WORD    2                                                
0171 000006 K6       WORD    6                                                
0174 000007 K7       WORD    7                                                
0177 00000A K10      WORD    10                                               
017A 00000F K15      WORD    15                                               
017D 000010 K16      WORD    16                                               
0180 000004 HEX04    BYTE    X'000004'         END-OF-FILE                    
0183 000030 HEX30    BYTE    X'000030'         CHARACTER '0'                  
0186 F2     INPUT    BYTE    X'F2'                                            
0187        ADDRESS  RESW    1                                                
018A        LIMIT    RESW    1                                                
018D        TEMP     RESW    1                                                
0190        RETGA    RESW    1                                                
0193        RETGD    RESW    1                                                
0196        RETS     RESW    1                                                
0199                 END     LOADER                                           
